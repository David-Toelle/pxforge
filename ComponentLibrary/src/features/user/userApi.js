// userApi.js
// This file sets up the API interactions for user authentication (login and registration) using RTK Query.
// It provides mutations for logging in and registering, which can be used in components.

import { createApi, fetchBaseQuery } from "@reduxjs/toolkit/query/react"; // Importing RTK Query functions for API management


//----------------------------------------------------------------
//                 User API Setup
//----------------------------------------------------------------
// `createApi` is used here to define the API slice for user-related operations.
// This slice includes mutations for login and registration, which send POST requests to the backend.

export const userApi = createApi({
  reducerPath: "userApi", // A unique key used to store the API state in the Redux store

  // `baseQuery`: Configures the base URL for the API requests
  baseQuery: fetchBaseQuery({
    baseUrl: "https://pxforge.onrender.com/",
  }),

  // `endpoints`: Defines the API operations (login and registration) as mutations
  endpoints: (builder) => ({
    // Mutation for user login
    login: builder.mutation({
      query: (credentials) => ({
        url: "auth/login", // Endpoint for login requests
        method: "POST", // Using POST to send login data
        body: credentials, // Sending user credentials (email and password) in the request body
      }),
    }),

    // Mutation for user registration
    register: builder.mutation({
      query: (userData) => ({
        url: "auth/register", // Endpoint for registration requests
        method: "POST", // Using POST to send registration data
        body: userData, // Sending user data (first name, last name, email, password) in the request body
      }),
    }),
  }),
});

// Exporting the hooks generated by RTK Query for use in components
export const { useLoginMutation, useRegisterMutation } = userApi;

//---------------------------------------------
//                Details
//---------------------------------------------

// 1. **RTK Query (`createApi`)**:
//    - `createApi` simplifies API requests by automatically generating hooks for components to interact with.
//    - It handles fetching, caching, and re-fetching based on the API state.

// 2. **Mutations (`login` and `register`)**:
//    - The `login` mutation sends user credentials to the `auth/login` endpoint to authenticate the user.
//    - The `register` mutation sends user data to the `auth/register` endpoint to create a new user account.
//    - Both mutations use POST requests, and their request bodies contain the necessary data to interact with the API (e.g., credentials for login, user information for registration).

// 3. **Generated Hooks**:
//    - RTK Query automatically generates hooks (`useLoginMutation`, `useRegisterMutation`) for each mutation.
//    - These hooks can be used in React components to trigger the corresponding API calls (login or register).
